<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-AIBBuildStatus</command:name>
      <command:verb>Get</command:verb>
      <command:noun>AIBBuildStatus</command:noun>
      <maml:description>
        <maml:para>Check on your build status!</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Check on your build status!</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AIBBuildStatus</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>ResourceGroupName</maml:name>
          <maml:Description>
            <maml:para>What are we calling the resource group? Slap it in here. I'll do the rest.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>ImageTemplateName</maml:name>
          <maml:Description>
            <maml:para>Whats the name of the custom template you want to check on?</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>AzureContext</maml:name>
          <maml:Description>
            <maml:para>Everything needs context. Store your AzureContext here.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">PSAzureContext</command:parameterValue>
          <dev:type>
            <maml:name>PSAzureContext</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>AzureContext</maml:name>
        <maml:Description>
          <maml:para>Everything needs context. Store your AzureContext here.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">PSAzureContext</command:parameterValue>
        <dev:type>
          <maml:name>PSAzureContext</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>ResourceGroupName</maml:name>
        <maml:Description>
          <maml:para>What are we calling the resource group? Slap it in here. I'll do the rest.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>ImageTemplateName</maml:name>
        <maml:Description>
          <maml:para>Whats the name of the custom template you want to check on?</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Get-AIBBuildStatus -AzureContext (Get-AzContext) -ResourceGroupName "AIBResourceGroup" -ImageTemplateName "HellaCoolTemplate"</dev:code>
        <dev:remarks>
          <maml:para>This will return the build status metadata in JSON format.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Initialize-AzureImageBuilder</command:name>
      <command:verb>Initialize</command:verb>
      <command:noun>AzureImageBuilder</command:noun>
      <maml:description>
        <maml:para>Initializer function that will create a resource group, managed identity and custom role permissions to assist preparing your tenant to use Azure Image Builder (Preview)</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Initializer function that will create a resource group, managed identity and custom role permissions to assist preparing your tenant to use Azure Image Builder (Preview)</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Initialize-AzureImageBuilder</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none">
          <maml:name>AzureContext</maml:name>
          <maml:Description>
            <maml:para>Pipe your Azure context object to the rest of the functions,</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">PSAzureContext</command:parameterValue>
          <dev:type>
            <maml:name>PSAzureContext</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>ResourceGroupName</maml:name>
          <maml:Description>
            <maml:para>Name of the resource group you want to either use (existing) or create if not found.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Location</maml:name>
          <maml:Description>
            <maml:para>Azure location that you want the resources to be created.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>IdentityName</maml:name>
          <maml:Description>
            <maml:para>Name of the managed identity to be generated.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none">
        <maml:name>AzureContext</maml:name>
        <maml:Description>
          <maml:para>Pipe your Azure context object to the rest of the functions,</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">PSAzureContext</command:parameterValue>
        <dev:type>
          <maml:name>PSAzureContext</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>IdentityName</maml:name>
        <maml:Description>
          <maml:para>Name of the managed identity to be generated.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>Location</maml:name>
        <maml:Description>
          <maml:para>Azure location that you want the resources to be created.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>ResourceGroupName</maml:name>
        <maml:Description>
          <maml:para>Name of the resource group you want to either use (existing) or create if not found.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Azure.Commands.Profile.Models.Core.PSAzureContext</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Initialize-AzureImageBuilder -AzureContext (Get-AzContext) -ResourceGroupName &lt;ResourceGroupName&gt; -Location &lt;Location&gt; -IdentityName &lt;IdentityName&gt;</dev:code>
        <dev:remarks>
          <maml:para>Will create a resource group if not found in your tenant. Will create a managed identity and associate required custom roles to it.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Invoke-AIBProviderCheck</command:name>
      <command:verb>Invoke</command:verb>
      <command:noun>AIBProviderCheck</command:noun>
      <maml:description>
        <maml:para>Helper function to check for and register relevant Resource Providers and Features to enable Azure Image Builder (Preview) in your Azure tenant.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Helper function to check for and register relevant Resource Providers and Features to enable Azure Image Builder (Preview) in your Azure tenant.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AIBProviderCheck</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>AZResourceProviders</maml:name>
          <maml:Description>
            <maml:para>For internal use only - this allows the function to consume it's output if the wait switch is used.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Array</command:parameterValue>
          <dev:type>
            <maml:name>Array</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Wait</maml:name>
          <maml:Description>
            <maml:para>Forces the function to wait until all providers return "registered" for their registration state. Can take a while. Go grab a coffee - take a load off.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>AZResourceProviders</maml:name>
        <maml:Description>
          <maml:para>For internal use only - this allows the function to consume it's output if the wait switch is used.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Array</command:parameterValue>
        <dev:type>
          <maml:name>Array</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Wait</maml:name>
        <maml:Description>
          <maml:para>Forces the function to wait until all providers return "registered" for their registration state. Can take a while. Go grab a coffee - take a load off.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Invoke-AIBProviderCheck -Wait</dev:code>
        <dev:remarks>
          <maml:para>This will verify the state of all required providers and will register any that are set to "NotRegistered". Using the wait switch will cause the function to re-run every 30 seconds until all registration states are "Registered". This process can take up to 10-15 minutes to complete, so using the wait switch can be helpful.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Invoke-AIBProviderCheck</dev:code>
        <dev:remarks>
          <maml:para>This will verify the state of all required providers and will register any that are set to "NotRegistered".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
</helpItems>